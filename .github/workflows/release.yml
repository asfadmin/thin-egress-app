# This workflow runs whenever a GitHub release is created. It gets the version
# number from the git tag, builds and tests TEA, and then uploads the artifacts
# to the public bucket for distribution.
name: Release

on:
  release:
    types:
      - released

jobs:
  build:
    uses: ./.github/workflows/re-build.yml
    with:
      environment: prod

  # The secrets context is not supported on job level `if`. So we need to hack around it:
  # https://github.com/actions/runner/issues/520#issuecomment-907427748
  check-tests:
    runs-on: ubuntu-latest
    outputs:
      run-tests: ${{ steps.eval.outputs.val }}
    steps:
      - id: eval
        env:
          RUN_TESTS: ${{ secrets.RUN_TESTS }}
        if: "${{ env.RUN_TESTS == 'true' }}"
        run: echo "::set-output name=val::yes"

  test-e2e:
    needs:
      - build
      - check-tests
    if: needs.check-tests.outputs.run-tests == 'yes'
    uses: ./.github/workflows/re-test-e2e.yml
    with:
      environment: test
      dependency-zip: ${{ needs.build.outputs.dependency-zip }}
      code-zip: ${{ needs.build.outputs.code-zip }}
      cloudformation-yaml: ${{ needs.build.outputs.cloudformation-yaml }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      URS_USERNAME: ${{ secrets.URS_USERNAME }}
      URS_PASSWORD: ${{ secrets.URS_PASSWORD }}
      URS_CLIENT_ID: ${{ secrets.URS_CLIENT_ID }}
      EDL_APP_UID: ${{ secrets.EDL_APP_UID }}
      EDL_APP_PASSWORD: ${{ secrets.EDL_APP_PASSWORD }}

  publish:
    runs-on: ubuntu-latest
    environment: prod
    needs:
      - build
      - test-e2e
    if: success() || needs.test-e2e.result == 'skipped'
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - uses: actions/checkout@v2

      - name: Load environment defaults
        run: cat .github/workflows/config-public/prod.env >> $GITHUB_ENV

      - uses: actions/download-artifact@v2

      - name: Upload to public code bucket
        env:
          S3_PATH_PREFIX: s3://${{ env.CODE_BUCKET }}/${{ env.CODE_PREFIX }}
        run: |
          aws s3 cp ./dependency-layer/thin-egress-app-dependencies.zip ${S3_PATH_PREFIX}${{ needs.build.outputs.dependency-zip }}
          aws s3 cp ./code/thin-egress-app-code.zip ${S3_PATH_PREFIX}${{ needs.build.outputs.code-zip }}
          aws s3 cp ./cloudformation/thin-egress-app.yaml ${S3_PATH_PREFIX}${{ needs.build.outputs.cloudformation-yaml }}
          aws s3 cp ./terraform/thin-egress-app-terraform.zip ${S3_PATH_PREFIX}${{ needs.build.outputs.terraform-zip }}

          echo '{"schemaVersion": 1, "label": "Last Release", "message": "'$GITHUB_REF_NAME'", "color": "success"}'  > lastrelease.json
          aws s3 cp lastrelease.json s3://${CODE_BUCKET}/thin-egress-app/ \
              --metadata-directive REPLACE \
              --cache-control no-cache \
              --expires '2016-06-14T00:00:00Z' \
              --content-type 'application/json' \
              --acl public-read


  release-assets:
    runs-on: ubuntu-latest
    needs:
      - build
      - test-e2e
    if: success() || needs.test-e2e.result == 'skipped'
    steps:
      - uses: actions/download-artifact@v2

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dependency-layer/thin-egress-app-dependencies.zip
          asset_name: ${{ needs.build.outputs.dependency-zip }}
          asset_content_type: application/zip
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./code/thin-egress-app-code.zip
          asset_name: ${{ needs.build.outputs.code-zip }}
          asset_content_type: application/zip
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./cloudformation/thin-egress-app.yaml
          asset_name: ${{ needs.build.outputs.cloudformation-yaml }}
          asset_content_type: application/vnd.yaml
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./terraform/thin-egress-app-terraform.zip
          asset_name: ${{ needs.build.outputs.terraform-zip }}
          asset_content_type: application/zip

  status:
    if: always()
    needs:
      - build
      - publish
    uses: ./.github/workflows/re-status.yml
    with:
      environment: prod
      build_tag: ${{ needs.build.outputs.version }}
      success: ${{ needs.build.result != 'failure' && needs.publish.result != 'failure' }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
